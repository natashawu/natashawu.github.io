<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Natasha&#39;s Plog (Programming Blog)</title>
    <description>This is the blog of a graphic designer turned full-stack developer. When I&#39;m not sitting in front of a computer, you&#39;ll find me baking up a storm.
</description>
    <link>http://natashawu.github.io/</link>
    <atom:link href="http://natashawu.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 08 Oct 2015 18:14:27 -0700</pubDate>
    <lastBuildDate>Thu, 08 Oct 2015 18:14:27 -0700</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Day #106 - The End Marks The Beginning</title>
        <description>&lt;p&gt;Here marks the end of the boot camp and the beginning of my life as a developer. I can&amp;#39;t be more excited to continue to learn more about programming and grow into a stronger developer.&lt;/p&gt;

&lt;p&gt;I hope to continue posting my thoughts here, so if you&amp;#39;re interested in seeing where this path leads me...stay tuned!&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Aug 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/08/09/day-onehundredsix.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/08/09/day-onehundredsix.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #103 - Judgement Day</title>
        <description>&lt;p&gt;Today’s the day! And here’s what I’ve got: 
&lt;a href=&quot;http://www.devourgoodfood.com&quot; title=&quot;:Devour&quot;&gt;devourgoodfood.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/showcase1.jpg&quot; alt=&quot;Setup&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/showcase2.jpg&quot; alt=&quot;Setup&quot;&gt;&lt;/p&gt;

&lt;p&gt;Thanks for coming out to visit, friends :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/visitors.jpg&quot; alt=&quot;I have friends!&quot;&gt;&lt;/p&gt;

&lt;p&gt;Congrats, Emperor Penguins! We did it!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/emperor_penguins.jpg&quot; alt=&quot;ACLTC: Emperor Penguins&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Aug 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/08/06/day-onehundredthree.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/08/06/day-onehundredthree.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #100 - Remembering to Give Thanks</title>
        <description>&lt;p&gt;Day after day of this adventure here in Chicago, I am reminded of how I wouldn’t be here without the support of my friends and family. Thank you to everyone who believed in me :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fam.jpg&quot; alt=&quot;Nothing beats family&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/kiks.png&quot; alt=&quot;Hanging out w. Kiks!&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/lily.jpg&quot; alt=&quot;Lily&amp;#39;s first visit to Chicago&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/kevin.jpg&quot; alt=&quot;Best boyfriend&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/besties.jpg&quot; alt=&quot;Besties!&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/harker_reunion.jpg&quot; alt=&quot;Mini high school reunion&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/jonny.png&quot; alt=&quot;Skype date w. Jonny!&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/isaac2.png&quot; alt=&quot;Skype date w. Isaac!&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/world.jpg&quot; alt=&quot;On top of the world&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/rachael.jpg&quot; alt=&quot;We&amp;#39;re on a boat!&quot;&gt;&lt;/p&gt;

&lt;p&gt;Extra special thanks to this guy: &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/eric.jpg&quot; alt=&quot;Best everything&quot;&gt;
I can&amp;#39;t thank you enough for your patience, time and kindness. If there were a &amp;quot;Best Personal TA&amp;quot; award, you&amp;#39;d get it for sure. &lt;/p&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/08/03/day-onehundred.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/08/03/day-onehundred.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #74 - Prying</title>
        <description>&lt;p&gt;We’ve been working on our capstones for a good couple weeks now and it’s been a lot of hard work, but pretty rewarding as well. For me, one of the most frustrating parts about creating my Rails app has been debugging. Throughout the course, we’ve learned how to use IRB and Rails console as tools for debugging. But to be honest, Rails console still freaks me out -- the syntax is really difficult for me to remember and one misplaced curly brace immediately returns a whole slew of error messages. User friendliness rating on a scale of 1 to 10: -3&lt;/p&gt;

&lt;p&gt;I was asking one of our TAs, Trevor, for help on my project today and he showed me this great alternative to IRB and Rails console called Pry. Pry-rails is a gem that allows you to run, pause and inspect code that you’re running on your local machine. It’s almost like a time-turner for code.&lt;/p&gt;

&lt;p&gt;My favorite part: 2-step installation.&lt;/p&gt;

&lt;p&gt;First, add the following gem to your gem file: 
&lt;code&gt;gem &amp;#39;pry-rails&amp;#39;, :group =&amp;gt; :development&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then:
&lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And that’s it!&lt;/p&gt;

&lt;p&gt;Here’s how to use it: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Put the words &lt;code&gt;binding pry&lt;/code&gt; wherever you think your code may be triggering an error. &lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;rails server&lt;/code&gt; in Terminal. &lt;/li&gt;
&lt;li&gt;You’ll see that the loader for the web page will start to move slower. Go into Terminal and you’ll see that it now shows something along the lines of &lt;code&gt;[1] pry(#&amp;lt;nameofinspectedfile&amp;gt;)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type anything that you would normally be able to type into Rails console into Pry to try and figure out why your code is breaking! &lt;/li&gt;
&lt;li&gt;Once you’re ready to “un-pause” the code, type &lt;code&gt;exit&lt;/code&gt; and the code should run through to the end again.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 08 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/07/08/day-seventyfour.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/07/08/day-seventyfour.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #57 - Ready, Set, Go!</title>
        <description>&lt;p&gt;We’re already at Week 7 and that means (cue fanfare...or ominous dun-dun-DUUUN) it’s time to start on our capstones! Stay tuned to find out what I’m building :)&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/06/21/day-fiftyseven.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/06/21/day-fiftyseven.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #31 - Intro to Rails</title>
        <description>&lt;p&gt;Prior to this course, I was telling anyone who asked that I would be learning Ruby on Rails, not knowing at all what Ruby or Rails really was. A typical conversation went like this: &lt;/p&gt;

&lt;p&gt;“Oh, cool! Do you know what languages you’ll be learning at the bootcamp?”&lt;/p&gt;

&lt;p&gt;“Yeah, we’ll be starting off with Ruby and going on to Ruby on Rails.”&lt;/p&gt;

&lt;p&gt;“Nice!”&lt;/p&gt;

&lt;p&gt;&lt;em&gt;both smiling, nodding and equally confused&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thankfully, today changed all that. Historically: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Rails was created as an open source project in 2004 by, co-founder of Basecamp and supposed programming badass, David Heinemeier Hansson (from this point forward referred to as DHH). I don’t know much about DHH, but he’s pretty famous in the coding world. And according to his Wikipedia page, he also drives race cars! I’d say that’s pretty badass.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rails is basically a giant Ruby gem (but most people call it a framework) where a lot of people wrote a lot of code to make it easier to get a website up and running quickly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rails follows a model called MVC, which stands for “model-view-controller.” This is the convention that Rails uses to organize where code goes in a web application.* In very simplified terms, a controller tells a model what to do. A model grabs the appropriate data from the database (based on what the controller tells it to get) and passes it to the view. A view generates an output for the user to see based on the data that the model passes to it. Of course, there’s a little more back and forth and it’s not always a perfect loop, but that’s how I like to think of it in a general sense. &lt;/p&gt;

&lt;p&gt;In our class, we like to think of the flow as being RCV -- “routes-controller-view.” In the routes file, you list all the possible web request combinations for your site. That means that if you want to have: thingsilove.com/cookies/index, thingsilove.com/cookies/about and thingsilove.com/cookies/new, you would have to list this in the routes file in the following fashion:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;get “/index” =&amp;gt; &amp;#39;cookies#index’&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code&gt;get&lt;/code&gt; is the verb, &lt;code&gt;/index&lt;/code&gt; is the url, &lt;code&gt;cookies&lt;/code&gt; is the controller and &lt;code&gt;index&lt;/code&gt; is the name of the controller action. Remember, a &lt;a href=&quot;/2015/05/25/day-thirty.html&quot;&gt;web request&lt;/a&gt; is an HTTP verb + a URL. &lt;/p&gt;

&lt;p&gt;At first, all these rules and conventions seemed kind of daunting, but I quickly realized how much of a pain it would be to make a website without them. Everything would be a mess of a billion files -- with random names, in random folders. In that situation, I don’t even want to think about trying to pick up something another developer has already started. So thank you, Rails (and I guess DHH + co.) for making life easier. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wait, “web application?” Don’t you mean “web site?” Or “mobile application?” No, I mean “web application.” And yes, it is confusing. I like to think that most modern websites are web applications -- they require user interaction to be useful. Web applications allow users to do anything from comment on a post to look up a destination on an interactive map. Web sites, on the other hand, are static pieces of the Internet that display information for the user to consume -- think of your local bar or grocery store’s online website. You can’t comment on anything or shop online, the only thing you can do is read about today’s specials and find out what their store hours are. For further explanation, look &lt;a href=&quot;http://www.visionmobile.com/blog/2013/07/web-sites-vs-web-apps-what-the-experts-think/&quot; title=&quot;Web sites vs. Web Apps&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 26 May 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/05/26/day-thirtyone.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/05/26/day-thirtyone.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #30 - What&#39;s in a Web Request?</title>
        <description>&lt;p&gt;You go to the address bar in the browser, type in “facebook.com” and viola!, you see the familiar blue and white website frequented by millennials (ok, it’s really cross-generational now -- my two-year-old cousin and my seventy-eight-year-old grandma both have a Facebook) around the world. &lt;/p&gt;

&lt;p&gt;But what really happens when you type in that web address?&lt;/p&gt;

&lt;p&gt;Think back, to the days of typing “http://” as a prefix. Yeah, I know, it’s been a while. But that is the beginning of a web request, or an HTTP request. HTTP is the simple protocol (kind of like a language) that browsers and servers use to communicate with each other. Basically, when you type in that address, your computer sends a web request to get something (a file, an image, etc.) from a server. The server then passes its response to the browser where you (hopefully) see what you’re looking for. &lt;/p&gt;

&lt;p&gt;To the best of my current knowledge, web request always contains an HTTP verb and a URL. An HTTP verb defines the action to be taken on the URL and the URL tells the server where to look for the appropriate information that it will eventually send back to the browser. &lt;/p&gt;

&lt;p&gt;And that, my friends, is what I learned about web requests today in a nutshell.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 May 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/05/25/day-thirty.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/05/25/day-thirty.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #23 - Revisiting Ruby &amp; Learning Shortcuts</title>
        <description>&lt;p&gt;Today, we reviewed what we’d learned in our class prework about Ruby. So far, it’s been great! I’m finding Ruby very intuitive in terms of syntax, which definitely makes it a lot easier to pick up. Historically: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby was invented around 1995 by a Japanese software programmer named, Yukihiro Matsumoto&lt;/li&gt;
&lt;li&gt;It was developed as a language that would be closest to the human language and thus, help programmers focus on coding itself rather than being distracted by remembering complicated syntax. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also learned a lot about our text editor of choice: Sublime Text. Shortcuts that have made my life much easier: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comment out a line: CMD + /&lt;/li&gt;
&lt;li&gt;Going to the front or end of a line: CMD + left/right arrows&lt;/li&gt;
&lt;li&gt;Insert line before: CMD + SHIFT + enter&lt;/li&gt;
&lt;li&gt;Move a line or section: CTRL + CMD + up/down arrows&lt;/li&gt;
&lt;li&gt;Delete entire line: CMD + delete&lt;/li&gt;
&lt;li&gt;Indenting: CMD + ]&lt;/li&gt;
&lt;li&gt;Unindenting: CMD + [&lt;/li&gt;
&lt;li&gt;Show/hide sidebar: CMD + k + b&lt;/li&gt;
&lt;li&gt;Selecting multiple lines: CMD + click&lt;/li&gt;
&lt;li&gt;Selecting multiples of the same word (after word is already highlighted): CMD + d&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are WAY more helpful shortcuts in Sublime than the ones I&amp;#39;ve listed above, but I&amp;#39;m still in the process of remembering all of them. In the meantime, here are some helpful resources I found: &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/reference/keyboard_shortcuts_osx.html&quot; title=&quot;First cheat sheet&quot;&gt;Cheat sheet 1&lt;/a&gt; | &lt;a href=&quot;http://marcelkalveram.com/2013/11/10-shortcuts-to-become-a-true-sublime-text-ninja/&quot; title=&quot;Second cheat sheet&quot;&gt;Cheat sheet 2&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 18 May 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/05/18/day-twentythree.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/05/18/day-twentythree.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #22 - The In-Person Beginning</title>
        <description>&lt;p&gt;It was a drizzly Sunday morning. The day we had all been waiting for finally arrived -- the first day of school! &lt;/p&gt;

&lt;p&gt;After a tour around the amazing 1871 coworking space, we began an overview of key lessons we would consistently be reminded of throughout the class. A few that stuck:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every piece of tech has its pros and cons -- we were reminded that there is a time and place for everything. There are rarely hard, fast rules about what language/software/etc. works best 100% of the time (even if many developers think there are). &lt;/li&gt;
&lt;li&gt;Tinker! -- we were told that programming is about testing many possible solutions. If you’re not sure which way to go, just try something out and see what happens. &lt;/li&gt;
&lt;li&gt;Always be learning -- wonderfully simplistic and completely self-explanatory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our first lecture made me feel like a true hacker. Wait...I can do all these things from the Terminal?! From &lt;code&gt;cd-ing&lt;/code&gt; into new directories (basically going from one folder to another WITHOUT using Finder!) to learning the dangers of &lt;code&gt;rm -rf&lt;/code&gt; (this gives us the power to delete ANY file on our computers...permanently), at this point, we felt pretty much like computer whizzes. &lt;/p&gt;

&lt;p&gt;Then, we learned about this confusing thing called Git and this popular site that uses it called GitHub. All in all, it’s a site where you can push your code into the cloud so that if (&lt;strong&gt;when&lt;/strong&gt; -- as our instructor always says) your computer crashes, you still have a backup copy of it. It’s also commonly used as a way for programmers to collaborate on projects together. &lt;/p&gt;

&lt;p&gt;The most important four lines of code that I learned today: &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git init
# This line tells git to initiate tracking changes of the folder you’re currently navigated in

git add --all
# This line prepares to add all the files to a git repository

git commit -m ‘initial commit’
# This line commits any changes made and allows you to put in your own commit message between the apostrophes

git push origin master
# This line pushes all the files up to GitHub in a new repository that you create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Sun, 17 May 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/05/17/day-twentytwo.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/05/17/day-twentytwo.html</guid>
        
        
      </item>
    
      <item>
        <title>Day #15 - To: My Current City of Inhabitance</title>
        <description>&lt;p&gt;Dear Chicago,&lt;br&gt;
Just so you know…&lt;br&gt;
May != rainy season&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/051015_IMG_2971_small.jpg&quot; alt=&quot;50 degrees and cloudy&quot;&gt;&lt;/p&gt;

&lt;p&gt;Sincerely,&lt;br&gt;
Confused Californian&lt;/p&gt;
</description>
        <pubDate>Sun, 10 May 2015 00:00:00 -0700</pubDate>
        <link>http://natashawu.github.io/2015/05/10/day-fifteen.html</link>
        <guid isPermaLink="true">http://natashawu.github.io/2015/05/10/day-fifteen.html</guid>
        
        
      </item>
    
  </channel>
</rss>
